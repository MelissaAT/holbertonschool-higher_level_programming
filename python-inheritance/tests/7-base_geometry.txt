The "7-base_geometry.txt" doctest
========================
Imports "BaseGeometry" class from "7-base_geometry"
Tests integer_validator method of the BaseGeometry class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("age", 12)

>>> try:
...     bg.integer_validator("age", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer

>>> try:
...     bg.integer_validator("age", (4,))
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer

>>> try:
...     bg.integer_validator("age", [3])
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer

>>> try:
...     bg.integer_validator("age", True)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer

>>> try:
...     bg.integer_validator("age", {3, 4})
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer

>>> try:
...     bg.integer_validator("age", None)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] age must be an integer
